/* 
 * ---------------------------------------- *
 * Name: Codehouse Carousel JavaScripts     *
 * Type: Minified JavaScript                *
 * Version: 2.0.0                           *
 * Author: Matt O'Neill                     *
 * Status: Release                          *
 * Requisites: >=jquery ui 1.8.20           *
 *             chg.Cookie(opt)              *
 *             json2(opt IE7 Cookie)        *
 * ---------------------------------------- *
 */
var appCookie = Cookie; // cookie namespace

void
function (e) {
    "use strict";

    function n(e, t) {
        for (var n in e) {
            if (n in t) {
                continue
            }
            t[n] = e[n]
        }
        return t
    }
    e.CodehouseCarousel = function (t, r, i) {
        var s = this,
            o = {
                modes: {
                    work: true,
                    infinite: true,
                    responsive: true,
                    nudge: true
                },
                controls: {
                    step: true,
                    pager: true
                },
                rotate: {
                    auto: false,
                    direction: "right",
                    interval: 500,
                    duration: 300,
                    type: "linear"
                },
                dimensions: {
                    fixedHeight: true,
                    maxHeight: 400,
                    baseWidth: 600
                },
                options: {
                    preload: false,
                    stickySlides: true,
                    visibleClassAfter: true,
                    maskedOverflow: true
                },
                onReady: function () { },
                onRotateStart: function () { },
                onRotateEnd: function () { }
            },
            u = n(o, r);
        s.init = function () {
            a.m._constr();
            a.m._staticCache();
            a.m.defaults._get();
            a.m._stitch();
            a.c._statEvnts();
            a.c._configure();
            a.c.async._prld();
            a.m.$b.attr("data-cc-id", i)
        };
        s.fit = function (e) {
            a.m._fit(e)
        };
        s.actionData = {};
        var a = {
            m: {
                $b: e(t),
                ani: false,
                hero: false,
                autDis: false,
                modes: [],
                fPos: 0,
                lPos: 0,
                cycTmr: 0,
                aI: 0,
                cP: 0,
                overflow: 0,
                sldSum: 0,
                sldHgt: undefined,
                sldWth: undefined,
                dynSldWth: null,
                div: 1,
                imgSrcArr: [],
                trans: {},
                resEv: "resize",
                algFct: {
                    linear: ["cubic-bezier(0.250, 0.250, 0.750, 0.750)", "linear"],
                    quad: ["cubic-bezier(0.455, 0.030, 0.515, 0.955)", "easeInOutQuad"],
                    back: ["cubic-bezier(0.680, -0.550, 0.265, 1.550)", "easeInOutBack"],
                    expo: ["cubic-bezier(1.000, 0.000, 0.000, 1.000)", "easeInOutExpo"]
                },
                ui: {
                    masks: '<span class="mask left" data-direction="left"></span><span class="mask right" data-direction="right"></span>'
                },
                stateData: {
                    activeSlide: 0
                },
                browser: {
                    oldIe: false
                },
                _constr: function () {
                    var n = navigator.userAgent.toLowerCase();
                    a.m.browser.oldIe = n.indexOf("msie 7.0") > -1 || n.indexOf("msie 8.0") > -1;
                    a.m.ccId = "cc-id-" + a.m.$b.data("guid");
                    s.actionData = {
                        $banner: e(t),
                        slideDirection: u.rotate.direction
                    }
                },
                _configImg: function () {
                    var e = [];
                    for (var t = 0; t < a.m.$bSld.length; t++) {
                        a.m.imgSrcArr[t] = a.m.$bSld.eq(t).find("img").attr("src")
                    }
                    if (a.m.imgSrcArr.length >= 1) {
                        for (var n in a.m.imgSrcArr) {
                            e[n] = new Image;
                            e[n].onload = a.c.async._updChk();
                            e[n].onerror = a.c.async._updChk();
                            e[n].src = a.m.imgSrcArr[n]
                        }
                    }
                },
                _props: function () {
                    a.m.hero = a.m.$bSld.length <= 1 ? true : false;
                    a.m.div = !a.m.hero ? u.modes.work && u.modes.infinite ? 3 : 1 : 0;
                    a.m.sldSum = a.m.div > 0 ? a.m.$bSld.length * a.m.div / a.m.div : 0;
                    a.m.sldHgt = a.m.$b.parent().height();
                    a.m.sldWth = a.m.dynSldWth = a.m.$b.parent().width();
                    a.m.trans = a.m.fact._transType();
                    try {
                        a.m.resEv = window.hasOwnProperty("orientation") ? "orientationchange" : "resize"
                    } catch (e) {
                        a.m.resEv = "resize"
                    }
                },
                _staticCache: function () {
                    this.defaults.cke = appCookie === undefined || appCookie == null ? undefined : Object.build(appCookie);
                    a.m.$bSlds = a.m.$b.children(".work-container");
                    a.m.$bSld = a.m.$bSlds.children("div");
                    a.m.$pgnCntr = a.m.$b.children(".pagination-controls");
                    a.m.$stpCntr = a.m.$b.children(".step")
                },
                _dynamCache: function () {
                    a.m.$bSld = a.m.$bSlds.children("div")
                },
                _stitch: function () {
                    if (u.options.maskedOverflow && u.modes.infinite && !a.m.hero) {
                        a.m.$b.prepend(a.m.ui.masks)
                    }
                },
                defaults: {
                    _get: function () {
                        if (u.options.stickySlides && this.cke !== undefined) {
                            try {
                                this.defaultsData = this.cke.check(a.m.ccId)
                            } catch (e) { }
                            if (this.defaultsData !== undefined) {
                                a.m.stateData = JSON.parse(this.defaultsData)
                            }
                        }
                    },
                    _set: function () {
                        if (u.options.stickySlides && this.cke !== undefined) {
                            try {
                                this.cke.write(a.m.ccId, JSON.stringify(a.m.stateData))
                            } catch (e) { }
                        }
                    },
                    _apply: function () {
                        void (a.m.stateData.activeSlide > 0 && a.c._actionController(a.m.stateData.activeSlide, false))
                    }
                },
                carousel: {
                    _slideVals: function (e) {
                        var t = 1,
                            n, r = 0;
                        if (typeof e == "number") {
                            if (e < a.m.aI) {
                                t = -(e - a.m.aI);
                                r = "left"
                            } else if (e > a.m.aI) {
                                t = -(a.m.aI - e);
                                r = "right"
                            }
                        } else {
                            r = e
                        }
                        s.actionData.slideDirection = r;
                        n = a.m.fact.calc[r](t);
                        a.m.aI = typeof e == "number" ? e : n[1] ? a.m.aI == Math.ceil(a.m.sldSum) - 1 ? 0 : a.m.aI + 1 : a.m.aI == 0 ? Math.ceil(a.m.sldSum) - 1 : a.m.aI - 1;
                        return {
                            newPosition: n[0],
                            dir: n[1]
                        }
                    },
                    _nudgeVals: function (e) {
                        return a.m.cP + {
                            left: 20,
                            right: -20,
                            "null": 0
                        }[e]
                    },
                    _sizingVals: function (e) {
                        a.m.dynSldWth = e;
                        a.m.overflow = u.modes.infinite ? a.m.dynSldWth * Math.ceil(a.m.sldSum) * -1 : 0;
                        a.m.fPos = a.m.overflow;
                        a.m.lPos = a.m.overflow - (a.m.dynSldWth * a.m.sldSum - a.m.dynSldWth);
                        a.m.cP = a.m.fPos - a.m.dynSldWth * a.m.aI
                    }
                },
                fact: {
                    _transType: function () {
                        var e = document.createElement("div"),
                            t = ["WebkitPerspective", "MozPerspective", "OPerspective", "msPerspective"];
                        for (var n in t) {
                            if (e.style[t[n]] !== undefined) {
                                return {
                                    prefix: t[n].replace("Perspective", "").toLowerCase(),
                                    anim: "-" + t[n].replace("Perspective", "").toLowerCase() + "-transform"
                                }
                            }
                            if (+n === t.length - 1) {
                                return {
                                    prefix: undefined,
                                    anim: "margin-left"
                                }
                            }
                        }
                    },
                    _hgtRat: function (e) {
                        var t = u.dimensions.maxHeight / u.dimensions.baseWidth * e;
                        return u.dimensions.fixedHeight ? parseInt(u.dimensions.maxHeight) : t > u.dimensions.maxHeight ? u.dimensions.maxHeight : t
                    },
                    calc: {
                        left: function (e) {
                            return [u.modes.work ? u.modes.infinite ? a.m.cP + a.m.dynSldWth * e : a.m.aI == 0 ? a.m.lPos : a.m.cP + a.m.dynSldWth * e : 0, false]
                        },
                        right: function (e) {
                            return [u.modes.work ? u.modes.infinite ? a.m.cP - a.m.dynSldWth * e : a.m.aI == a.m.sldSum - 1 ? a.m.fPos : a.m.cP - a.m.dynSldWth * e : 0, true]
                        }
                    }
                },
                _errors: function () {
                    a.m.isError = true
                }
            },
            c: {
                async: {
                    _ldInc: 0,
                    _prld: function () {
                        u.options.preload && !a.m.browser.oldIe ? a.m._configImg() : a.c._ready()
                    },
                    _updChk: function () {
                        this._ldInc++;
                        if (this._ldInc === a.m.imgSrcArr.length) {
                            a.c._ready()
                        }
                    }
                },
                _ready: function () {
                    if (!a.m.isError) {
                        a.c._dynEvnts();
                        a.m.defaults._apply();
                        a.v._setActive();
                        a.v._present();
                        a.v.carousel._stVis();
                        a.c.external._ready()
                    }
                },
                _configure: function () {
                    a.m._props();
                    if (u.modes.work) {
                        if (u.modes.infinite && !a.m.hero) {
                            a.m.modes.push("infinite");
                            a.m.$bSlds.prepend(a.m.$bSld.clone());
                            a.m.$bSlds.prepend(a.m.$bSld.clone())
                        }
                    } else {
                        a.m.modes.push("fade")
                    }
                    a.m._dynamCache();
                    a.v._applyModes();
                    a.c._rspnsve();
                    void (u.controls.step && !a.m.hero && a.v.carousel._shwCntr());
                    void (u.controls.pager && !a.m.hero && a.v.carousel._bldPager());
                    void (u.controls.pager && a.v.carousel._setActivePager());
                    a.c.autoScroll._intTmr()
                },
                _statEvnts: function () {
                    function n() {
                        a.m.ani = false;
                        a.c._rspnsve();
                        a.m.autDis = false
                    }
                    var t;
                    a.m.$b.on({
                        mouseenter: function () {
                            a.m.autDis = true
                        },
                        mouseleave: function () {
                            a.m.autDis = false
                        }
                    });
                    void (u.controls.step && a.m.$stpCntr.on({
                        click: function () {
                            a.c._actionController(e(this).data("direction"), true)
                        }
                    }));
                    void (u.modes.nudge && a.m.$stpCntr.on({
                        mouseenter: function () {
                            if (!a.m.ani && u.modes.work) {
                                a.c._ndge(e(this).data("direction"))
                            }
                        },
                        mouseleave: function () {
                            if (!a.m.ani && u.modes.work) {
                                a.c._ndge(null)
                            }
                        }
                    }));
                    e(window).on(a.m.resEv, function (e) {
                        a.m.$bSlds.stop();
                        a.m.autDis = true;
                        clearTimeout(t);
                        a.c._rspnsve();
                        t = setTimeout(function () {
                            n()
                        }, 100)
                    })
                },
                _dynEvnts: function () {
                    void (u.controls.pager && !a.m.hero && a.m.$pgnCntr.children().on({
                        click: function () {
                            var t = e(this).index();
                            if (t != a.m.aI) {
                                a.c._actionController(t, true)
                            }
                        }
                    }))
                },
                _actionController: function (e, t) {
                    function r() {
                        a.m.ani = false;
                        a.c.external._end();
                        void (u.options.visibleClassAfter && a.v.carousel._stVis())
                    }
                    if (!a.m.ani) {
                        a.m.ani = true;
                        var n = a.m.carousel._slideVals(e);
                        a.c.external._start();
                        a.v.carousel._setActivePager();
                        void (!u.options.visibleClassAfter && a.v.carousel._stVis());
                        if (u.modes.work) {
                            if (t) {
                                a.v.action._slide(n.newPosition, function () {
                                    if (u.modes.infinite && a.m.aI === 0 && n.dir || a.m.aI === Math.ceil(a.m.sldSum) - 1 && !n.dir) {
                                        a.m.cP = n.dir ? a.m.fPos : a.m.lPos;
                                        a.v.action._snap(a.m.cP)
                                    } else {
                                        a.m.cP = n.newPosition
                                    }
                                    r()
                                })
                            } else {
                                a.v.action._snap(n.newPosition);
                                if (u.modes.infinite && a.m.aI === 0 && n.dir || a.m.aI === Math.ceil(a.m.sldSum) - 1 && !n.dir) {
                                    a.m.cP = n.dir ? a.m.fPos : a.m.lPos
                                } else {
                                    a.m.cP = n.newPosition
                                }
                                r()
                            }
                        } else {
                            if (t) {
                                a.v.action._fade(r)
                            } else {
                                a.v.action._show(r)
                            }
                        }
                    }
                    a.m.stateData.activeSlide = a.m.aI;
                    a.m.defaults._set()
                },
                _ndge: function (e) {
                    a.v.action._nudge(a.m.carousel._nudgeVals(e))
                },
                _fit: function (e) {
                    a.v.dims._setHeight(e);
                    a.v.dims._setWidth(e);
                    if (u.modes.work) {
                        a.m.carousel._sizingVals(e);
                        a.v.action._snap(a.m.overflow - a.m.dynSldWth * a.m.aI);
                        if (!a.m.hero) {
                            a.v.dims._masks()
                        }
                    }
                    if (!a.m.hero) {
                        a.v.dims._masks()
                    }
                },
                _rspnsve: function () {
                    a.c._fit(a.m.$b.parent().innerWidth())
                },
                autoScroll: {
                    _intTmr: function () {
                        if (u.rotate.auto) {
                            a.c.autoScroll._intTmrClr();
                            a.m.cycTmr = setInterval(function () {
                                if (!a.m.autDis) {
                                    a.c._actionController(u.rotate.direction, true)
                                }
                            }, u.rotate.interval)
                        }
                    },
                    _intTmrClr: function () {
                        clearInterval(a.m.cycTmr)
                    }
                },
                external: {
                    _start: function () {
                        try {
                            u.onRotateStart(s.actionData)
                        } catch (e) { }
                    },
                    _end: function () {
                        try {
                            u.onRotateEnd(s.actionData)
                        } catch (e) { }
                    },
                    _ready: function () {
                        try {
                            u.onReady(s.actionData)
                        } catch (e) { }
                    }
                }
            },
            v: {
                carousel: {
                    _shwCntr: function () {
                        a.m.$stpCntr.fadeIn(800)
                    },
                    _setActivePager: function () {
                        a.m.$pgnCntr.children().removeClass("active").eq(a.m.aI).addClass("active")
                    },
                    _stVis: function () {
                        a.m.$bSld.removeClass("visible").eq(u.modes.work ? a.m.aI + Math.ceil(a.m.sldSum) : a.m.aI).addClass("visible")
                    },
                    _bldPager: function () {
                        for (var e = 0; e < a.m.sldSum; e++) {
                            a.m.$pgnCntr.append("<span />")
                        }
                        a.m.$pgnCntr.css({
                            marginLeft: -(a.m.$pgnCntr.width() / 2)
                        })
                    }
                },
                action: {
                    _fade: function (t) {
                        a.m.$bSlds.children(".active").css("z-index", 1);
                        a.m.$bSlds.children().eq(a.m.aI).css("z-index", 2).fadeIn(u.rotate.duration, function () {
                            a.m.$bSlds.children(".active").css("z-index", 0).hide().removeClass("active");
                            e(this).addClass("active");
                            t()
                        })
                    },
                    _show: function (e) {
                        a.m.$bSlds.children().eq(0).hide();
                        a.m.$bSlds.children().eq(a.m.aI).css("z-index", 2).show().addClass("active");
                        e()
                    },
                    _slide: function (e, t) {
                        switch (a.m.trans.prefix) {
                            case undefined:
                                a.m.$bSlds.stop().animate({
                                    marginLeft: e
                                }, u.rotate.duration, a.m.algFct[u.rotate.type][1], function () {
                                    t()
                                });
                                break;
                            default:
                                a.m.$bSlds.css("-" + a.m.trans.prefix + "-transition-duration", u.rotate.duration / 1e3 + "s").css(a.m.trans.anim, "translate3d(" + e + "px, 0, 0)").css("-" + a.m.trans.prefix + "-transition-timing-function", a.m.algFct[u.rotate.type][0]).one("transitionend webkitTransitionEnd", function () {
                                    t()
                                });
                                break
                        }
                    },
                    _snap: function (e) {
                        switch (a.m.trans.prefix) {
                            case undefined:
                                a.m.$bSlds.css("margin-left", e);
                                break;
                            default:
                                a.m.$bSlds.css("-" + a.m.trans.prefix + "-transition-duration", "0s");
                                a.m.$bSlds.css(a.m.trans.anim, "translate3d(" + e + "px, 0, 0)");
                                break
                        }
                    },
                    _nudge: function (e) {
                        switch (a.m.trans.prefix) {
                            case undefined:
                                a.m.$bSlds.stop().animate({
                                    marginLeft: e
                                }, 150, "linear");
                                break;
                            default:
                                a.m.$bSlds.css("-" + a.m.trans.prefix + "-transition-duration", .15 + "s").css(a.m.trans.anim, "translate3d(" + e + "px, 0, 0)").css("-" + a.m.trans.prefix + "-transition-timing-function", "cubic-bezier(0.250, 0.250, 0.750, 0.750)");
                                break
                        }
                    }
                },
                _present: function () {
                    a.m.$b.children("span.loader").fadeOut(600)
                },
                _applyModes: function () {
                    a.m.$b.addClass(a.m.modes.join(" "))
                },
                _setActive: function () {
                    a.m.$bSld.eq(a.m.aI).addClass("active")
                },
                dims: {
                    _setHeight: function (e) {
                        a.m.$b.add(a.m.$bSlds).add(a.m.$bSld).css("height", a.m.fact._hgtRat(e))
                    },
                    _setWidth: function (e) {
                        a.m.$bSld.css("width", e)
                    },
                    _masks: function () {
                        a.m.$b.children(".mask.left").css({
                            width: a.m.overflow * -1,
                            marginLeft: a.m.overflow
                        });
                        a.m.$b.children(".mask.right").css({
                            width: a.m.overflow * -1,
                            marginLeft: a.m.dynSldWth
                        })
                    }
                }
            }
        };
        s.init()
    };
    var t = 0;
    e.fn.codehouseCarousel = function (n) {
        return this.each(function () {
            if (undefined == e(this).data("codehouseCarousel-" + t)) {
                var r = new e.CodehouseCarousel(this, n, t++);
                e(this).data("codehouseCarousel", r)
            }
        })
    };
    Object.build = function (e) {
        function n() {
            if (typeof e.init === "function" && t.length) {
                e.init.apply(this, t)
            }
        }
        if (e !== undefined) {
            var t = Array.prototype.slice.call(arguments, 1);
            n.prototype = e;
            return new n
        }
    };
    jQuery.easing["jswing"] = jQuery.easing["swing"];
    jQuery.extend(jQuery.easing, {
        def: "easeInOutQuad",
        swing: function (e, t, n, r, i) {
            return jQuery.easing[jQuery.easing.def](e, t, n, r, i)
        },
        easeInOutQuad: function (e, t, n, r, i) {
            if ((t /= i / 2) < 1) return r / 2 * t * t + n;
            return -r / 2 * (--t * (t - 2) - 1) + n
        },
        easeInOutBack: function (e, t, n, r, i, s) {
            if (s == undefined) s = 1.70158;
            if ((t /= i / 2) < 1) return r / 2 * t * t * (((s *= 1.525) + 1) * t - s) + n;
            return r / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + n
        },
        easeInOutExpo: function (e, t, n, r, i) {
            if (t == 0) return n;
            if (t == i) return n + r;
            if ((t /= i / 2) < 1) return r / 2 * Math.pow(2, 10 * (t - 1)) + n;
            return r / 2 * (-Math.pow(2, -10 * --t) + 2) + n
        }
    })
}(jQuery)
